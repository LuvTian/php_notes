1.路由地址是从操作方法开始解析的

2.在success和error方法里不要使用url方法，可能会出错，因为success和error会自动识别，在模板和控制器里可以使用

3.控制器和模型的文件名第一个字母要大写，文件夹小写；试图的文件夹和文件名都要小写

4.find(对象) get(对象) select all

默认情况下，find和select方法返回的都是数组。

模型的all方法或者select方法返回的是一个包含模型对象的二维数组或者数据集对象。

模型的查询都是返回模型对象

vendor 目录不能随便手动加 只能通过composer命令来

使用join和view方法连接自身时 不能使用whereTime方法 两者只能使用其一

5.在phpstudy环境下出现No input file specified这个错误
修改nginx虚拟机root目录这个配置的斜杠是不是/而不是\

6.tp5刚安装好出现404
500错误排查是否开了全局代理
502 Bad Gateway php-fpm服务是否开启

7.设置指定域名允许跨域请求api,要加上http
Route::post('api/gettoken/user','express_admin_api/Token/getToken')
->header('Access-Control-Allow-Origin','http://192.168.1.253:8080')
->allowCrossDomain();
设置所有域名都允许跨域访问直接：
Route::post('api/gettoken/user','express_admin_api/Token/getToken')
->allowCrossDomain();
如果出现OPTIONS 500跨域错误，检查是否开启了网络代理


8.一对一模型关联：在有外键的模型(img_id)里用belongsTo 没有外键的模型用hasOne

9.只要开启了app_debug=true或者数据库调试模式(database.php下的debug=true)任何一项，都会写入日志记录runtime/log,当这两项调试模式都为false的时候，才没有日志写入
如果不要数据库sql查询每次都要执行show column FROM xxx查询字段信息，因为这样影响性能。可以生成数据表字段缓存（php think optimize:schema --db demo）来优化，同时还需要关闭数据库调试模式（database.php下的debug=false）

10.关于配置：
应用配置：与application同级的config目录下
模块配置：有两个地方可以放模块配置，一是在每个模块下的config目录 application/module/config，二是可以把application/module/config移动到应用配置目录下的module/config. 
一旦模块目录下面存在config目录，则应用配置目录下的模块配置则无效，也不会对两个目录的配置进行合并


11.开发阶段安全措施：开启强制路由，路由分组
12.部署阶段安全措施：
关闭应用调试模式，关闭数据库调试模式
13.部署阶段优化：
通过命令行生成类库映射文件；
通过命令行生成配置缓存文件；
生成数据表字段缓存文件；
生成路由映射缓存（前提要开启路由延迟解析）

14.tp5模型类可以调用Db的所有方法
15.大批量插入数据使用Db类的insertAll()方法，生成insert into `table_name` (field1,field2) values ('1','2'),('3','4'),('5','6')... 这样的sql语句

16.hasWhere不能和withJoin一起使用，可以和with一起使用
with不是join方式查询 withJoin是join方式查询  视图查询是高级的join

17.关联查询尽量用with方法，不用join方法。with查询有两次查询
但是一对一关联要用withJoin方法（对于一对一关联来说，如果使用JOIN方式只有一次查询）
withJoin默认是inner join 要使用left join设置withJoin的第二个参数
with和withJoin都可以闭包查询，但withJoin闭包函数里面不能使用field属性可以使用withField

一对多关联使用with的时候，在闭包函数里用$query->field指定字段的时候要加上关联键