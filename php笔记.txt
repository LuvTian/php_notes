1.定义常量 define("常量名","常量值");常量名通常全大写，区分大小写，常量的值是不变的，不能修改，常量的值只能是标量：字符串(string)、整型(int)、浮点型(float)、布尔型(bool),常量可以在全局范围内使用。系统常量：M_PI,PHP_OS,PHP_VERSION... 魔术常量：__LINE__,__FILE__,__FUNCTION__(返回当前函数的函数名),__CLASS__(返回当前类的类名),__METHOD__
2.变量名通常驼峰命名,区分大小写。变量前面如果加上&符号表示传址（引用同一内存地址 操作同一个），不加表示传值（复制一份）
3.$_GET["数据字段"] 通常以get方式获取超链接里的数据，并将数据提交到地址栏，不够安全，数据小
4.$_POST["数据字段"]    通常以post方式获取表单里的数据，将数据提交到相关的PHP文件，安全，数据量大，图片.视频..
5.$_REQUEST["数据字段"]  既可以get也可以post
6.单引号不能解析变量和转义符，可以解析html代码，效率高，双引号可以解析变量和转义符。单引号里可以进行字符串连接来解析变量
7.var_dump("变量")  返回变量的类型的函数，无返回值，getType("变量或常量"),返回值是变量类型的字符串，
7.检测变量是否存在的函数 isset("变量") 返回布尔值
8.检测常量是否存在的函数 defined("常量名")

9. 8种数据类型：
    标量：字符串(string),整型(int),浮点型(float),布尔型(bool)
    复合类型:数组(array),对象(object)
    其他类型:资源(resource),NULL

10.为布尔假的类型:false、0、"0"、0.0、空字符串、NULL、空数组 除了这些其他均为真。PHP中任何类型都能转换成布尔型
11.unset("变量")  从内存中删除已经定义的变量，未定义的变量值为NULL,也可以删除数组中的某个元素。
12.系统函数不区分大小写，echo()、getType()、var_dump()
13.is_string()判断字符串、is_int()判断变量是不是整型、is_float()判断变量是不是浮点型、is_array()判断是不是数组、is_object()判断是不是对象、is_resource()是不是资源、is_bool()、is_null()
14.三种强制类型转换方式：
    $a=123;$b=(string)$a;var_dump($b);把变量$a强制转换为字符串，并赋值给新变量$b,原变量$a不变
    也可以通过settype(变量,'类型')函数强制转换类型,会直接改变原变量的类型
    具体转换函数： intval()、floatval()、strval() 可以将返回值赋值给新的变量,这种方式只能转换标量类型
15.PHP中的运算符类型：
    算术运算符：+ - * / %

    递增/递减运算符

    比较运算符:> < >= <= = == === <> != (只比较值) !==（比较值和类型）

    逻辑运算符：|| or(逻辑或 或者，其中一个条件或多个条件是真就返回真)、 && and(逻辑与 并且，其中一个条件假就返回假)、 ! not(逻辑非 取反)、xor(逻辑异或，当仅有一个条件为真返回真，其他情况为假)

    位运算符包括：位逻辑运算符和位移运算符  1. 位逻辑运算符：&(按位与 二进制数的情况下 左右两边的数同位都为1返回1 否则返回0)、|(按位或 二进制数情况下 左右两边的数 只有当同位都为0时返回0，否则都返回1)、^(按位异或 只有当同位不同时，返回1，否则返回0)、~(按位非 将一个二进制数位中的1变成0 0变成1)。将一个十进制数转换成二进制数的两个函数decbin(6)、base_convert(6,10,2)  2. 位移运算符：<<左移 将左边数的二进制位左移右边数指定数量的位右边空位补0、>>右移 将左边数的二进制位右移右边数指定数量的位左边空位补0

    其他运算符：连接运算符. .=  赋值运算符=  禁止显示警告信息@
16.i++和++i的区别：i++是先进行表达式运算和赋值，然后i再自身++;++i是先自身++,再进行表达式运算和赋值
17.$a=$a+n 相当于 $a+=n
18.三元运算符：表达式1?表达式2:表达式3     如果表达式1成立则执行表达式2，否则执行表达式3
19.逻辑与短路：如果如果第一个表达式不成立为假，后面的表达式就不会被程序执行。逻辑或短路：如果第一个表达式成立为真，后面的表达式就不会被程序执行。按位与和按位或不存在短路
20.检测函数是否存在：function_exists(函数名);
21.文件的引用：
    include() 如果引用的文件不存在，提示警告错误，后面的程序继续执行。
    require() 如果引用的文件不存在，提示致命错误，后面的程序终止执行。
    include_once() require_once()只引用一次文件，如果此文件引入过，将不再引入。
22.数组
    数组包括索引数组、关联数组、复合数组（一个数组中同时存在关联元素和索引元素）、多维数组
    implode() 把数组连接成字符串
    explode() 把字符串分割成数组,有两个参数
    in_array() 检测某元素在数组中是否存在，返回布尔值
    array_search() 检测某元素在数组中是否存在，若存在返回其键名，若不存在返回FLASE。
    each() 把数组元素拆分成新的数组（一次只能拆分一个元素，当元素被拆分完后，如果还继续执行该函数，则返回FLASE），每拆分一个指针会向后移动一个，1和value保存的是原数组的键值，0和key保存的是原数组的键名。reset()可以把数组内部指针移动到数组第一个元素，并返回第一个元素值，end()把指针移动到最后一个元素，next()把指针移动到下一个元素，如果到结尾返回FLASE，如果当前元素的值为空或0，也返回FLASE，prev()把指针向上移动一位
    list() 把数组元素赋值给变量，只适用于索引数组，但可以用each()将关联数组转成索引数组。list()和each()通常配合使用来遍历数组
    extract() 将关联数组转换成变量，键名作为变量名，键值作为变量值，如果需要转换索引数组为变量，需要加参数和前缀。
    compact() 将一个或多个变量转化为关联数组，变量名为数组的键名，变量值为数组的键值。
    current() 返回当前指针指向的数组元素。
    key() 返回当前指针指向的数组元素的键名。
    array_unique() 删除数组中的重复项，返回一个新的数组。
    array_unshift() 往数组的开头位置插入一个新元素，返回插入后新数组元素的个数。
    array_shift() 删除数组中的第一个元素，并返回被删除的元素。如果删除失败，返回NULL
    array_pop() 删除最后一个元素（出栈）,返回被删除的元素，原数组会被修改
    array_push() 在数组的结尾增加一个或多个元素。入栈。给数组添加元素效率高的做法是$arr[] = "";这种形式。
    array_keys() 返回一个由原关联数组的键名组成的新的索引数组。
    array_values() 返回一个由原数组键值组成的新索引数组。
    array_map(func,arr) 对数组中的每一个元素都经过自定义函数func进行处理，返回值是处理过的元素所组成的新数组
    array_walk(arr,func,其他参数) 对数组中的每一个元素都经过自定义函数func进行处理,处理成功返回true,失败返回flase。不适用于多维数组。
    array_walk_recursive() 适用于多维数组。
    array_merge() 将多个数组合并，生成新数组，多用于配置文件合并
    array_change_key_case() 转数组换键名的大小写
    range() 生成包含指定范围内的数组，第三个参数是步长值
    array_rand() 随机取得数组元素，第二个参数是指定取得元素的个数，如果是取得多个元素则返回一个元素索引的数组，如果取得1个只返回这个元素的索引
    array_slice() 截取指定范围的数组元素，第二个参数截取的开始位置，第三个参数截取的长度，第四个参数是否保留数字索引值
    array_splice() 删除指定范围内的数组元素，如果指定第四个参数，则在删除元素位置放入第四个参数的 值。

23.文件操作
    fopen(filename, mode) 打开文件
    fwrite(handle, string) 写文件
    fclose(handle) 关闭文件
--------------------------------------------------------------------------------------------
24.分享10条PHP性能优化小技巧，更好的用PHP开发：
1、foreach效率更高，尽量用foreach代替while和for循环；
2、循环内部不要声明变量，尤其是对象这样的变量；
3、在多重嵌套循环中，如有可能，应当将最长的循环放在内层，最短循环放在外层，从而减少cpu跨循环层的次数，优化程序性能；
4、用单引号替代双引号引用字符串以实现PHP性能优化；
5、用i+=1代替i=i+1。 符合c/c++的习惯，效率还高；
6、优化Select SQL语句，在可能的情况下尽量少的进行Insert、Update操作，达到PHP性能优化的目的；
7、尽量的少进行文件操作，虽然PHP的文件操作效率也不低的；
8、尽可能的使用PHP内部函数；
9、在可以用PHP内部字符串操作函数的情况下，不要用正则表达式；
10、feof、fgets、fopen、在可以用file_get_contents替代file、系列方法的情况下，尽量用 file_get_contents，因为它的效率高得多。 但是要注意file_get_contents在打开一个URL文件时候的PHP版本问题；

25.记住：
$_POST和$_GET是一个数组类型的超全局变量，接收前端表单传递来的数据，返回一个数组
可以直接使用json_encode函数把前端传来的表单数据解析成json格式再返回给前端：echo json_encode($_POST);当然直接这样是没有意义的

26.通过mysqli类库操作数据库步骤
建立到mysql的链接,打开指定的数据库 $con=new mysqli('localhost','root','root','test');
设置默认的客户端的字符集 $con->set_charset('utf8');
执行的sql查询 $result=$con->query("SELECT * FROM test");
释放结果集   $result->free();  php有自动回收的机制
关闭链接    $con->close();

$con->connect_errno:得到连接产生的错误编号。
$con->connect_error:得到连接产生的错误信息。

执行SQL语句的返回值：
select/desc/describe/show/explain执行成功返回myslqi_result结果集，失败为false；
其他SQL语句执行成功为true，失败为false

执行INSERT语句成功的时候可以得到自增长的id值：$con->insert_id;
执行INSERT、UPDATE、DELETE语句可以得到受影响的记录数 $con->affected_rows

affected_rows值有三种：
1).得到受影响的记录数
2).-1 表示sql语句有问题
3).0 表示没有受影响的记录

执行SELECT语句成功返回一个结果集对象，失败返回false，成功还可以得到结果集里的记录条数(大于0)：$result->num_rows;
从结果集中取出记录的结果集对象的方法：
$result->fetch_all();等价于$result->fetch_all(MYSQLI_NUM); 获取结果集中的所有记录，并以二维的索引数组返回
$result->fetch_all(MYSQLI_ASSOC);获取结果集中的所有记录，并以二维的关联数组返回
$result->fetch_all(MYSQLI_BOTH); 既有关联又有索引

注意fetch_all()方法只在带有 MySQL Native Driver 时可用，需要安装mysqlnd

对于不支持fetch_all()的，可以使用fetch_array();方法代替 ，但此方法每次只能从结果集中取出一条记录，如果想全部取出，需要进行循环
$result->fetch_array();返回只包含一条记录既有关联又有索引的数组,等价于$result->fetch_array(MYSQLI_BOTH);
$result->fetch_array(MYSQLI_ASSOC);返回只包含一条记录的关联数组，等价于$result->fetch_assoc();
$result->fetch_array(MYSQLI_NUM);返回只包含一条记录的索引数组，等价于$result->fetch_row();

while($row=$result->fetch_assoc()){
    print_r($row);
    echo "<hr>";
    // $arr[]=$row;存到一个数组中
}

另外fetch_object();方法从结果集中取得当前行，并作为对象返回。

27.PDO
1).配置PDO（以mysql为例）
在php.ini里开启extension = php_pdo.dll和extension = php_pdo_mysql.dll
开启后通过phpinfo可以查看PDO扩展的详细信息

28.使用composer安装扩展需要开启openssl
在D:\phpStudy\php55n\php.ini  开启 extension=php_openssl.dll


29.php5.6  php.ini  always_populate_raw_post_data = -1

30.array_column() 返回输入数组中某个单一列的值。如有一个学生表数组，我想取出每一个学生的成绩，放到一个数组里









