基础知识：
数据类型：字符型、整型、浮点型、日期时间型

数据表中的行称之为记录，列称之为字段

关键词与函数名称都要大写，数据库名称、表名称、字段名称都要小写
sql语句必须以分号结束

修改数据库配置文件my.cnf
default-character-set = utf8 修改数据库默认编码
default_storage_engine = InnoDB 修改数据表存储引擎
--------------------------------------------------------------------
约束：
约束保证数据的完整性和一致性
约束分为表级约束（针对两个或以上的字段来使用）和列级约束（只针对某一个字段使用）
约束按照功能分类：
    NOT NULL (非空约束)
    PRIMARY KEY (主键约束)
    UNIQUE KEY (唯一约束)
    DEFAULT (默认约束)
    FOREEIGN KEY (外键约束)




--------------------------------------------------------------------


1、创建、修改、删除数据库：
CREATE DATABASE database_name;
CREATE DATABASE database_name CHARACTER SET utf8; 创建指定编码的数据库

ALTER DATABASE db_name CHARACTER SET gbk; 修改数据库的编码


查看所有数据库列表；
SHOW DATABASES;

SHOW CREATE DATABASE database_name;
查看指定的数据库信息 包括数据库编码

删除指定数据库
DROP DATABASE db_name;

2、创建数据表：
CREATE TABLE [IF NOT EXISTS] table_name(
    column_name data_type NOT NULL,
    username VARCHAR(20),
    ...
);

column_name是字段名，也就是列，
data_type是数据类型,
NOT NULL是该字段属性，表示该字段值不允许为空，字段的默认属性是NULL可以省略不写
每行后面以逗号结尾，最后一行不需要逗号

SHOW CREATE TABLE table_name;
查看所创建数据表信息 包括数据表的存储引擎、编码

3、查看当前位于哪个数据库下：
SELECT DATABASE();


4、查看当前数据库的数据表：
SHOW TABLES;
查看指定数据库的数据表：
SHOW TABLES FROM db_name;

5、查看某数据表结构：
SHOW COLUMNS FROM table_name;

6、插入记录，增加行数据：
INSERT [INTO] table_name [(column_name,...)] VALUE(val,...);
如果column_name省略，那么必须给所有的字段都赋值，不管怎么样字段名和其值必须对应。



7、自动编号：AUTO_INCREMENT
必须与主键组合使用,起始值为1
主键不一定必须和自动编号一起使用
为自动编号的字段在插入记录的时候不需要进行赋值
如果没有自动编号属性的主键字段是可以赋值的，但不能重复


----------------------------------------------------------------------------
约束：

约束分为表级约束和列级约束

对一个数据列建立的约束（只约束一个字段）叫做列级约束，既可以在列定义时声明，也可以在列定义后声明，实际操作用列级约束用的多
对多个数据列建立的约束（约束两个或以上的约束）叫做表级约束，只能在列定义后声明

约束按功能可分类为：
NOT NULL(非空约束)
PRIMARY KEY(主键约束)
UNIQUE KEY(唯一约束)
DEFAULT(默认约束)
FOREIGN KEY(外键约束)

8、主键：PRIMARY KEY
主键约束
每张数据表只能存在一个主键
主键可以保证记录的唯一性
主键自动为NOT NULL

CREATE TABLE table_name(
id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
username VARCHAR(30) NOT NULL
);

9、唯一约束：UNIQUE KEY
唯一约束
唯一约束可以保证记录的唯一性
唯一约束的字段可以为空值(NULL)  NULL != NULL
每张数据表可以存在多个唯一约束

AUTO_INCREMENT + UNIQUE KEY 就相当于PRIMARY KEY

10、字段默认值 DEFAULT
默认约束
当插入记录时，如果没有明确为字段赋值，则自动赋予默认值
demo:
CREATE TABLE tb6(
id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
username VARCHAR(20) NOT NULL UNIQUE KEY,
sex ENUM ('1','2','3') DEFAULT '3'
);
INSERT tb6 (username) VALUES('Tom'); 插入一条记录，不设置sex的值
SELECT * FROM tb6; 可以发现上面这条记录的sex字段有默认值3

11、外键约束
保持数据的一致性、完整性
实现一对一或一对多关系
外键约束的要求：
父表(子表所参照的表)和子表(具有外键列的表)必须使用相同的存储引擎，而且禁止使用临时表。
数据表的存储引擎只能为InnoDB。在MySQL配置文件里配置default-storage-engine=INNODB
外键列(加了FOREIGN关键字的列)和参照列(外键列所参照的列)必须具有相似的数据类型。其中数字的长度或是否有符号位必须相同；而字符的长度则可以不同。
外键列和参照列必须创建索引。如果外键列不存在索引的话，MySQL将自动创建索引。

CREATE TABLE provinces( -->父表
id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT, -->参照列
pname VARCHAR(20) NOT NULL
);

CREATE TABLE users( -->子表
id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
username VARCHAR(20) NOT NULL,
pid SMALLINT UNSIGNED, -->外键列
FOREIGN KEY (pid) REFERENCES provinces (id)
);

----------------------------------------------------------------------------


12、查询记录
SELECT * FROM table_name;

13、备份数据库
mysqldump -u root -p --all-databases > databases.sql
ls查看一下有没有生成databases.sql文件

14、导入sql文件
use db_name;
source /www/xxx.sql

----------------------------------------------------------------------------

用户操作
GRANT ALL PRIVILEGES ON database_name.* TO username@'%' IDENTIFIED BY 'password'; 指定某个数据库 添加或授权一个用户名为username，密码为password，授权为% （%表示所有ip能连接，可以设置指定ip或者localhost）


GRANT ALL PRIVILEGES ON *.* TO rehack@'%' IDENTIFIED BY '198874' WITH GRANT OPTION; 让rehack用户从任何ip（主机）远程连接到mysql服务器，建议不要给root用户这样的权限，*.* 这里前面的*号表示所有的数据库，后面的*号表示所有的权限

FLUSH PRIVILEGES; 刷新数据库权限

select host,user from user; 查看mysql数据库用户
